((core,w,$,reff)=>{"use strict";(register=>{register.register(register)})({register:register=>{var a;(core=register).options=reff.options,a={a:()=>core.utils.debugPrint("EasyGo JavaScript Helper"),b:()=>core.utils.registrar(register),c:()=>core.utils.activator.c(core.events.windoc)},core.utils.activator.c(a)},ui:{toastr:options=>(self=>self.register(self))({register:self=>self.act(self),opt:core.utils.json.merge(core.options.toastr,options),act:self=>{self.opt.debugMode&&core.utils.debugPrint("Toastr",self.opt),w.toastr.options=self.opt,w.toastr[self.opt.bsColor](self.opt.message,self.opt.title)}}),toastrError:options=>(self=>self.register(self))({register:self=>self.act(self),opt:core.utils.json.merge(core.options.toastrError,options),act:self=>{self.opt.message=core.utils.templateTranslator(self.opt.message,self.opt.templateTranslatorData),self.opt.debugMode&&core.utils.debugPrint("Toastr Error",self.opt),core.ui.toastr({debugMode:!1,bsColor:"error",title:self.opt.title,message:self.opt.message})}}),templateManager:{TopMenu:{destroyAll:()=>(self=>self.register(self))({register:self=>self.act(self),dom:$("li",reff.doms.topBar.menu()),act:self=>self.dom.remove()}),rootMenu:{destroy:index=>(self=>self.register(self))({register:self=>self.act(self),dom:$(`li.kt-menu__item.kt-menu__item--submenu.kt-menu__item--rel:eq(${index})`,reff.doms.topBar.menu()),act:self=>self.dom.remove()}),addWithoutChild:options=>(self=>{self.register(self)})({register:self=>self.act(self),dom:reff.doms.topBar.menu(),opt:core.utils.json.merge(core.options.topBarRootMenu_AddWhithoutChild,options),cnt:self=>$("li.kt-menu__item.kt-menu__item--submenu.kt-menu__item--rel",self.dom).length,act:self=>{const opt=self.opt;opt.index<0&&(opt.index=0);const tpl=`\n                                    <li class="kt-menu__item kt-menu__item--submenu kt-menu__item--rel" data-ktmenu-submenu-toggle="{ac.ApplicationState.TopMenuExpandOn}" aria-haspopup="true">\n                                        <a href="${opt.url}" class="kt-menu__link kt-menu__toggle">\n                                            <span class="kt-menu__link-text">${opt.title}</span>\n                                            <i class="kt-menu__ver-arrow la la-angle-right"></i>\n                                        </a>\n                                    </li>\n                                `;!0==(0===opt.index||0===self.cnt(self))?self.dom.prepend(tpl):$(`li.kt-menu__item.kt-menu__item--submenu.kt-menu__item--rel:eq(${opt.index})`,reff.doms.topBar.menu()).after(tpl)}}),addWithChilds:options=>(self=>self.register(self))({register:self=>{}}),edit:(oldOption,newOption)=>(self=>self.register(self))({register:self=>self.act(self),dom:$(`li.kt-menu__item.kt-menu__item--submenu.kt-menu__item--rel > a[href="${oldOption.url}"]:contains('${oldOption.title}')`,reff.doms.topBar.menu()),paramChecker:()=>core.utils.isValidData(oldOption)||core.utils.isValidData(newOption),act:self=>{if(!self.paramChecker())return void core.ui.toastrError({debugMode:!1,title:"Arguments Null Exception",message:"Invalid supplied param for {{method}}",templateTranslatorData:{method:`<code>${reff.registrarNamespace}.ui.templateManager.topMenu.rootMenu.edit()</code>`}});const tgt=self.dom,newUrl="javascript:;"===oldOption.url&&tgt.siblings("div.kt-menu__submenu").length>0?"javascript:;":newOption.url;0!==tgt.length?tgt.attr("href",newUrl).find("span.kt-menu__link-text").text(newOption.title):core.ui.toastrError({debugMode:!1,title:"Not Found",message:"Top menu yang Anda maksud tidak dapat ditemukan."})}}),visibility:(index,visible=!0)=>(self=>self.register(self))({register:self=>self.act(self),dom:$(`li.kt-menu__item.kt-menu__item--submenu.kt-menu__item--rel:eq(${index})`,reff.doms.topBar.menu()),act:self=>self.dom[`fade${visible?"In":"Out"}`](750)})},childMenu:{getMenu:(parent,child)=>$(`a[href="${parent.url}"]:contains('${parent.title}')`,reff.doms.topBar.menu()).siblings("div.kt-menu__submenu").find(`a[href="${child.url}"]:contains('${child.title}')`).closest("li"),destroy:(parent,child)=>core.ui.templateManager.topBar.childMenu.getMenu(parent,child).remove()}},quickPanel:{tabs:{getTabByIndex:index=>(self=>self.register(self))({register:self=>self.act(self),dom:$(".kt-quick-panel__nav > ul > li.nav-item",reff.doms.quickPanel()),idx:self=>!index||isNaN(index)||index<0||index>=self.dom.length?0:index,act:self=>$($(self.dom[self.idx(self)])[0])}),getTabContentByIndex:index=>(self=>self.register(self))({register:self=>self.act(self),dom:$(".kt-quick-panel__content > .tab-content > .tab-pane",reff.doms.quickPanel()),idx:self=>!index||isNaN(index)||index<0||index>=self.dom.length?0:index,act:self=>$($(self.dom[self.idx(self)])[0])}),add:options=>(self=>self.register(self))({register:self=>self.act(self),tab:$(".kt-quick-panel__nav > .nav-tabs",reff.doms.quickPanel()),ctn:$(".kt-quick-panel__content > .tab-content",reff.doms.quickPanel()),opt:core.utils.json.merge(reff.options.quickPanel_addTab,options),builder:{tab:self=>{const cid=core.utils.slugify({text:self.opt.title,prefix:"kt_quick_panel_tab",separator:"_"});return`\n                                        <li class="nav-item">\n                                            <a class="nav-link" data-toggle="tab" href="#${cid}" role="tab">${self.opt.title}</a>\n                                        </li>\n                                    `},ctn:self=>{const cid=core.utils.slugify({text:self.opt.title,prefix:"kt_quick_panel_tab",separator:"_"});return`\n                                        <div class="tab-pane fade show kt-scroll" id="${cid}" role="tabpanel">\n                                            <div class="kt-notification">\n                                            </div>\n                                        </div>\n                                    `}},act:self=>{const cnt=self.tab.find("li").length;0===cnt&&(self.opt.index=0);const sbt=self.builder.tab(self),sbc=self.builder.ctn(self);0===self.opt.index?(self.tab.prepend(sbt),self.ctn.prepend(sbc)):(self.tab.find(`li.nav-item:nth-child(${self.opt.index})`).after(sbt),self.ctn.find(`div.tab-pane:nth-child(${self.opt.index})`).after(sbc))}}),remove:index=>(self=>self.register(self))({register:self=>self.act(self),act:()=>{const qpt=core.ui.templateManager.quickPanel.tabs;qpt.getTabByIndex(index).remove(),qpt.getTabContentByIndex(index).remove()}}),hide:(index,cb)=>$(core.ui.templateManager.quickPanel.tabs.getTabByIndex(index))[core.options.common.removeAnimation](core.options.common.removeDuration,()=>cb&&cb()),show:(index,cb)=>$(core.ui.templateManager.quickPanel.tabs.getTabByIndex(index))[core.options.common.showAnimation](core.options.common.showDuration,()=>cb&&cb()),changeActive:index=>(self=>self.register(self))({register:self=>self.act(self),dom:$(".kt-quick-panel__nav > ul > li.nav-item > a.nav-link",reff.doms.quickPanel()),idx:()=>!index||isNaN(index)||index<0||index>self.dom.length?0:index,act:self=>{self.dom.removeClass("active"),$(self.dom[self.idx]).trigger("click")}})},content:{addRow:options=>(self=>self.register(self))({register:self=>self.act(self),opt:core.utils.json.merge(reff.options.quickPanel_AddRow,options),act:self=>{const so=self.opt;so.onClick=core.utils.defaultValue(so.onClick,"#");const nhref="function"==typeof so.onClick?"javascript:;":"#",qpa=`${core.utils.slugify({text:so.title,prefix:"qpa"})}-${Math.round(999999*Math.random())}`,html=2===so.styleVersion?`\n                                        <a href="${nhref}" class="kt-notification-v2__item ${qpa}">\n                                            <div class="kt-notification-v2__item-icon">\n                                                <i class="${so.icon} kt-font-${so.iconColor}"></i>\n                                            </div>\n                                            <div class="kt-notification-v2__itek-wrapper">\n                                                <div class="kt-notification-v2__item-title">\n                                                    ${so.title}\n                                                </div>\n                                                <div class="kt-notification-v2__item-desc">\n                                                    ${so.desc}\n                                                </div>\n                                            </div>\n                                        </a>\n                                    `:`\n                                        <a href="${nhref}" class="kt-notification__item ${qpa}">\n                                            <div class="kt-notification__item-icon">\n                                                <i class="${so.icon} kt-font-${so.iconColor}"></i>\n                                            </div>\n                                            <div class="kt-notification__item-details">\n                                                <div class="kt-notification__item-title">\n                                                    ${so.title}\n                                                </div>\n                                                <div class="kt-notification__item-time">\n                                                    ${so.desc}\n                                                </div>\n                                            </div>\n                                        </a>\n                                    `,tgt=$(core.ui.templateManager.quickPanel.tabs.getTabContentByIndex(self.opt.tabIndex)).find(`div.kt-notification${2===so.styleVersion?"-v2":""}`);tgt[so.insertMode](html),"javascript:;"===nhref&&core.utils.revent(tgt.find(`a.${qpa}`),"click",e=>so.onClick(e))}}),removeRow:(tabIndex,rowIndex)=>core.ui.templateManager.quickPanel.tabs.getTabContentByIndex(tabIndex).find('div[class^="kt-notification"] > a[class^="kt-notification"]').eq(rowIndex).remove()}},loadingScreen:{hide:cb=>(self=>self.register(self))({register:self=>self.act(self),dom:reff.doms.loadingScreen(),act:self=>core.utils.dom.hide(self.dom,cb)}),show:cb=>(self=>self.register(self))({register:self=>self.act(self),dom:reff.doms.loadingScreen(),act:self=>core.utils.dom.show(self.dom,cb)}),redirect:url=>(self=>self.register(self))({register:self=>self.act(self),dom:reff.doms.loadingScreen(),act:self=>core.utils.dom.show(self.dom,()=>{setTimeout(()=>{window.location=url},core.options.common.redirectAnimationDuration)})})}}},events:{windoc:{ready:()=>{return $((a={a:()=>setTimeout(()=>core.ui.templateManager.loadingScreen.hide(),core.options.common.readyAnimationDuration),b:()=>core.utils.activator.c(core.events.anchors)},core.utils.activator.c(a)));var a}},anchors:{redirect:()=>(self=>self.register(self))({register:self=>core.utils.revent(self.dom,self.eve,e=>self.act(e)),dom:$("body a[href]"),eve:"click",act:e=>{const ne=$(e.currentTarget),href=ne.attr("href");if(href&&"#"!==href.split("")[0]&&"javascript:;"!==href)return e.preventDefault(),void core.ui.templateManager.loadingScreen.redirect(href);core.utils.doNothing()}})}},utils:{registrar:()=>{w[reff.registrarNamespace]=core,delete w[reff.registrarNamespace].register,delete w[reff.registrarNamespace].utils.registrar},activator:{a:(events,root)=>events.split("|").forEach(a=>root[a]()),b:(events,root)=>events.split("|").forEach(a=>root[a].register()),c:root=>{for(let item in root)root.hasOwnProperty(item)&&"register"!==item&&"function"==typeof root[item]&&root[item]()},d:function(events,root){"0|1".split("|").forEach(x=>delete arguments[x]);const argues=[];for(let i in arguments)arguments.hasOwnProperty(i)&&argues.push(arguments[i]);events.split("|").forEach(x=>root[x].apply(root,argues))},e:function(root){delete arguments[0];const argues=[];for(let i in arguments)arguments.hasOwnProperty(i)&&argues.push(arguments[i]);for(let i in root)root.hasOwnProperty(i)&&"register"!==i&&"function"==typeof root[i]&&root[i].apply(root,argues)}},doNothing:()=>{},debugPrint:function(session){if(!1===reff.debugMode||arguments.length<1)return;delete arguments[0];const sty="color: black; font-style: italic; font-weight: bold; font-size: 120%; background-color: #a2caee; padding: 0 120px 0 120px;",argues=[];for(let i in arguments)arguments.hasOwnProperty(i)&&argues.push(arguments[i]);0===argues.length&&argues.push("PASS"),console.info(`%c[BOF:: ${session}]`,sty),console.group("[DATA]"),argues.forEach(x=>console.log(x)),console.groupEnd(),console.info(`%c[EOF:: ${session}]`,sty)},templateTranslator:(text,data)=>($.each(data,(k,v)=>{text=text.replace(RegExp(`{{${k}}}`,"g"),v)}),text),dom:{hide:(dom,cb)=>(self=>self.register(self))({register:self=>self.act(self),opt:core.options.common,act:self=>{setTimeout(()=>cb&&cb(),self.opt.hideDuration),$(dom)[self.opt.removeAnimation](self.opt.removeDuration)}}),show:(dom,cb)=>(self=>self.register(self))({register:self=>self.act(self),opt:core.options.common,act:self=>{setTimeout(()=>cb&&cb(),self.opt.showDuration),$(dom)[self.opt.showAnimation](self.opt.showDuration)}})},json:{copy:json=>$.extend(!0,{},json),merge:(json,njson)=>$.extend(!0,core.utils.json.copy(json),njson)},once:options=>(self=>self.register(self))({register:self=>self.act(self),opt:core.utils.json.merge(core.options.once,options),cto:opt=>{clearTimeout(w[opt.name]),delete w[opt.name]},act:self=>{const opt=self.opt;w[opt.name]&&self.cto(),w[opt.name]=setTimeout(()=>{opt.cb&&opt.cb(),self.cto(opt)},opt.interval)}}),isValidData:data=>Array.isArray(data)?data.length>0:data&&"object"==typeof data?!(0===Object.keys(data).length&&data.constructor===Object):null!=data&&""!==data,defaultValue:(value,onNullValue)=>core.utils.isValidData(value)?value:onNullValue,revent:(target,event,func)=>{const ivd=core.utils.isValidData;ivd(target)&&ivd(event)&&ivd(func)&&"function"==typeof func&&(target=$(target)).off(event).on(event,func)},tryParseInt:(value,def=0)=>isNaN(parseInt(value))||1/0===value?def:parseInt(value),tryParseFloat:(value,def=0)=>isNaN(parseFloat(value))||1/0===value?def:parseFloat(value),numberFormat:(num,fractionDigits=2)=>num.toFixed(fractionDigits).replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1,"),slugify:options=>(self=>self.register(self))({register:self=>self.act(self),opt:core.utils.json.merge(core.options.slugify,options),act:self=>{const opt=self.opt;return core.utils.isValidData(opt.text)?(opt.suffix=core.utils.isValidData(opt.suffix)?`${opt.separator}${opt.suffix}`:"",opt.prefix=core.utils.isValidData(opt.prefix)?`${opt.prefix}${opt.separator}`:"",`${opt.prefix}${opt.text.toLowerCase().replace(RegExp(" ","g"),opt.separator)}${opt.suffix}`):""}}),encryptor:source=>w.btoa(source),decryptor:source=>w.atob(source)}})})(null,window,window.jQuery,{debugMode:!0,debugPrintConfigs:{},registrarNamespace:"easyGo",doms:{topBar:{menu:()=>$("div#kt_header_menu > ul.kt-menu__nav"),toolbar:()=>$("#kt-header__topbar")},quickPanel:()=>$("div#kt_quick_panel"),loadingScreen:()=>$("div#fp-loading-screen")},options:{common:{removeAnimation:"fadeOut",showAnimation:"fadeIn",removeDuration:750,showDuration:750,readyAnimationDuration:5e3,redirectAnimationDuration:1500},once:{name:`tmr_${Math.round(999999*Math.random())}`,interval:100,cb:null},slugify:{text:"",prefix:"",suffix:"",separator:"-"},toastr:{closeButton:!0,debug:!1,debugMode:!0,newestOnTop:!0,progressBar:!0,positionClass:"toast-bottom-right",preventDuplicates:!0,showDuration:"300",hideDuration:"1000",timeOut:"5000",extendedTimeOut:"1000",showEasing:"swing",hideEasing:"linear",showMethod:"fadeIn",hideMethod:"fadeOut",bsColor:"success",title:"enter the title",message:"enter your message"},toastrError:{debugMode:!0,title:"Error Title",message:"Error {{data}}",templateTranslatorData:{data:"123456"}},topBarRootMenu_AddWhithoutChild:{index:0,url:"#",title:"Sample Menu"},topBarRootMenu_AddWithChilds:{index:0,title:"Sample Menu",childs:[{url:"#",title:"Child 1"},{url:"#",title:"Child 2"},{url:"#",title:"Child 3",childs:[{url:"#",title:"Child 1"},{url:"#",title:"Child 2"}]}]},quickPanel_addTab:{index:0,title:"Tab Title"},quickPanel_AddRow:{tabIndex:0,icon:"flaticon-bell",iconColor:"brand",title:"Notification Title",desc:"Notification description",styleVersion:1,onClick:null,insertMode:"append"}}});